@model LMS.DATA.Lesson

@{
    ViewBag.Title = "Details";
}


<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <h1>@Html.DisplayFor(modelItem => Model.LessonTitle) </h1>
            <h4><strong>Course:</strong> @Html.DisplayFor(modelItem => Model.Cours.CourseName)</h4>
            <br />
            <p>@Html.DisplayFor(modelItem => Model.Introduction)</p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12" style="height:70vh;">
            @*<iframe src="~/Content/pdfs/@Model.PdfFileName" style="max-height: 100%; max-width: 100%; height: 500px; width:100%;"></iframe>*@
            <iframe id="pdfContainer" src="~/Content/pdfs/@Model.PdfFileName" style="height:100%; width:50%;"></iframe>
        </div>
    </div>
    <br />
    <div class="row">
        @*<div class="col-md-12" style="height:70vh;">
            <iframe id="VideoUrlContainer" style="height:100%; width:100%"
                    src="@Model.VideoUrl"></iframe>
        </div>*@
        @if (Model.VideoUrl != null)
        {
        <div class="col-md-12" style="height:70vh;">
            <div id="player" width:100%"></div>
        </div>
        }
        
    </div>
    <div class="row">
        <div class="col-md-4">
            <br />
            <input class="btn btn-primary" type="button" onclick="CompleteLesson" name="name" value="Complete Lesson" />
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function CompleteLesson() {

        }

        var pdfSrc = document.getElementById('pdfContainer').src
        var n = pdfSrc.includes("NoContent")
        console.log(n)

        //console.log(document.getElementById('testz').src)
        if (document.getElementById('VideoUrlContainer').src == '') {
            document.getElementById('VideoUrlContainer').style.display = "none";
        }
        else {
            console.log("it's not null so it's showing")
        }

        //if (n) {
        //    document.getElementById('pdfContainer').style.display = "none";
        //}
        //else {
        //    console.log("it's not null so it's showing")
        //}
    </script>
    <script src="http://www.youtube.com/player_api"></script>

    <script>
// create youtube player
var player;
var h = '@ViewBag.height';
var w = '@ViewBag.width';
function onYouTubePlayerAPIReady() {
player = new YT.Player('player', {
height: 660,
    width: 1046.32,
modestbranding: 1,
videoId: '@ViewBag.VideoID',
playerVars: {
rel: 0,
autoplay: 0,
disablekb: 0,
showsearch: 0,
showinfo: 0,
controls: 1,
fs: 1,
hd: 1,
html5: 1,
iv_load_policy: 3
},
events: {
onReady: onPlayerReady,
onStateChange: onPlayerStateChange
}
});
}
// autoplay video
function onPlayerReady(event) {
event.target.playVideo();
}

// when video ends
function onPlayerStateChange(event) {
if(event.data === 0) {
//do something on end;
alert('done');
}
}
    </script>

    @*<script>
        if (@Model.VideoUrl == null) {
            document.getElementById('player').style.display = "none";
        }

        if (player.videoId == null) {
            document.getElementById('player').style.display = "none";
        }
        
    </script>*@

}

@*<h2>Details</h2>

    <div>
        <h4>Lesson</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.LessonTitle)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LessonTitle)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Introduction)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Introduction)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.VideoUrl)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.VideoUrl)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PdfFileName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PdfFileName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsActive)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsActive)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Cours.CourseName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Cours.CourseName)
            </dd>

        </dl>
    </div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.LessonId }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@
